<?php

/**
 * Block editor (gutenberg) specific functionality
 *
 */ 


/**
 * General (non-block-dependent) editor scripts
 * changes taxonomy selectors
 */  


function kapital_enqueue_editor_content_assets() {
    $block_editor_path = get_template_directory_uri() . '/block-editor/build/';
    $custom_editor_scripts_assets = require dirname(__FILE__) . '\build\custom-editor-scripts\index.asset.php';
    if ( is_admin() ) {
        wp_enqueue_script(
            'custom-editor-scripts',
            $block_editor_path . 'custom-editor-scripts/index.js',  $custom_editor_scripts_assets['dependencies'], $custom_editor_scripts_assets['version']
        );
    }
}


add_action( 'enqueue_block_editor_assets', 'kapital_enqueue_editor_content_assets' );

/**
 * Block editor (gutenberg) color palette synced from sass
 *
 */

add_action('after_setup_theme', 'kapital_block_editor_setup');

function kapital_block_editor_setup()
{
    $color_palette = generate_color_palette();
    if ($color_palette) {
        add_theme_support('editor-color-palette', $color_palette);
    }
}


/**
 * Checks for our JSON file of color values. If exists, creates a color palette array.
 *
 *
 * @return array
 */
function generate_color_palette()
{
    $color_palette = array();
    // Grabs the autogenerated color palette that we're pulling from our compiled bootstrap stylesheets.
    $file_path = dirname(__FILE__) . '\custom-color-palette.json';
    $color_palette_json = file_get_contents($file_path); // phpcs:ignore WordPress.WP.AlternativeFunctions.file_get_contents_file_get_contents
    if ($color_palette_json) {
        $color_palette_json = json_decode($color_palette_json, true, 512);
        foreach ($color_palette_json["variables"][0]["mapValue"] as $color) {
                $color_palette[] = array(
                    'name'  => $color["name"],
                    'slug'  => $color["name"],
                    'color' => $color["compiledValue"],
                );
        }  
    }
    return $color_palette;
}