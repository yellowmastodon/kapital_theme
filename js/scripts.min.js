/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/scripts/ad-inserter.js":
/*!***************************************!*\
  !*** ./assets/scripts/ad-inserter.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   adInserter: () => (/* binding */ adInserter),
/* harmony export */   checkAdInsertingEnabled: () => (/* binding */ checkAdInsertingEnabled),
/* harmony export */   checkDarujmeActive: () => (/* binding */ checkDarujmeActive),
/* harmony export */   checkDonationInsertingEnabled: () => (/* binding */ checkDonationInsertingEnabled),
/* harmony export */   checkSinglePostOrPodcast: () => (/* binding */ checkSinglePostOrPodcast),
/* harmony export */   registerClicks: () => (/* binding */ registerClicks)
/* harmony export */ });
/* harmony import */ var _donation_form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./donation-form */ "./assets/scripts/donation-form.js");


/** 
 * Checks if the current page is a single post or podcast.
 * @returns {boolean} Returns true if it's a single post or podcast, false otherwise.
 */
function checkSinglePostOrPodcast() {
  if (document.body.classList.contains('single-post') || document.body.classList.contains('single-podcast')) {
    return true;
  } else {
    return false;
  }
}

/** 
 * Checks if the campaign (Darujme) insertion is active on the page.
 * @returns {boolean} Returns true if Darujme is active, false otherwise.
 */
function checkDarujmeActive() {
  if (document.body.classList.contains('darujme-active')) {
    return true;
  } else {
    return false;
  }
}

/** 
 * Checks if ad insertion is enabled for the single post page.
 * @returns {boolean} Returns true if ad insertion is enabled, false otherwise.
 */
function checkAdInsertingEnabled() {
  if (document.getElementById("main").classList.contains("show-ads")) {
    return true;
  } else {
    return false;
  }
}

/** 
 * Checks if donation form insertion is enabled on the page.
 * @returns {boolean} Returns true if donation form insertion is enabled, false otherwise.
 */
function checkDonationInsertingEnabled() {
  if (document.getElementById("main").classList.contains('show-support')) {
    return true;
  } else {
    return false;
  }
}

/** 
 * Inserts ads and donation form into the content of the page.
 * - For single posts: Inserts ad at 1/3 of the post, and donation form at 2/3.
 * - For other pages: Looks for manually inserted ad block, does not insert donation form via ajax.
 * - Calls a function to count clicks on ads.
 * @param {string} HTMLJson JSON-encoded HTML containing ad and donation form.
 * @param {boolean} singlePostOrPodcast Determines if it's a single post or podcast page.
 * @param {function} registerClicksCallback A function to be called when an ad link is clicked.
 */
function adInserter(HTMLJson) {
  var singlePostOrPodcast = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var registerClicksCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var data = JSON.parse(HTMLJson); // Parse the JSON string into an object.

  var adHTML = data.ads; // Extract ad HTML from the parsed data.
  var donationHTML = data.donation_form; // Extract donation form HTML from the parsed data.
  var donationGloballyEnabled = document.body.classList.contains("darujme-active");
  if (singlePostOrPodcast) {
    // Select content areas for single post or podcast pages
    var content = document.querySelectorAll("#post-content, #podcast-content");
    var paragraphs = document.querySelectorAll("#post-content > p, #podcast-content > p");

    // If there are more than 8 paragraphs, split ad and donation placement
    if (paragraphs.length > 8) {
      var adPosition = Math.floor(paragraphs.length / 3) - 1; // Position for ad (1/3 of content)

      // Insert donation form and ad at calculated positions
      if (donationGloballyEnabled) {
        var donationPosition = Math.floor(paragraphs.length * 2 / 3) - 1; // Position for donation (2/3 of content)
        paragraphs[donationPosition].insertAdjacentHTML('afterend', donationHTML);
      }
      if (adHTML[0] !== "" && typeof adHTML[0] !== "undefined") {
        paragraphs[adPosition].insertAdjacentHTML('afterend', adHTML[0]);
      }
    } else {
      // If there are less than 8 paragraphs, handle insertion differently
      if (paragraphs.length > 3) {
        var _adPosition = Math.floor(paragraphs.length / 2) - 1; // Place ad in the middle
        if (adHTML[0] !== "" && typeof adHTML[0] !== "undefined") {
          paragraphs[_adPosition].insertAdjacentHTML('afterend', adHTML[0]);
        }
      }
      // Insert donation form at the end of the content
      if (donationGloballyEnabled) {
        content[0].insertAdjacentHTML('beforeend', donationHTML);
      }
    }

    // If there is a donation form, initialize it
    if (donationHTML !== "") {
      (0,_donation_form__WEBPACK_IMPORTED_MODULE_0__["default"])(document.getElementById('darujme-form-wrapper'));
    }
  } else {
    // Handle case for other pages where ad placeholders are manually inserted
    document.querySelectorAll('.wp-block-kapital-ad').forEach(function (placeholder, key) {
      // If there is an ad HTML to replace the placeholder, do so
      if (typeof adHTML[key] !== "undefined") {
        placeholder.insertAdjacentHTML('afterend', adHTML[key]);
      }
      // Remove the placeholder after replacement
      placeholder.remove();
    });
  }

  // Find all ads on the page and register click event listeners for them
  var allAds = document.querySelectorAll('.inzercia');
  registerClicks(allAds, registerClicksCallback);
}

/** 
 * Registers click event listeners for ad elements to count clicks.
 * @param {NodeList} elements The list of ad elements.
 * @param {function} ajaxCallback The callback function to call when an ad is clicked.
 */
function registerClicks(elements) {
  var ajaxCallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  function onClick(event) {
    // Only process the click if it's trusted (not simulated)
    if (event.isTrusted) {
      var ad_id = Number(event.target.closest('.inzercia').attributes["data-ad-id"].value); // Get ad ID
      ajaxCallback('adclickcounter', {
        ad_id: ad_id
      }); // Call the provided callback with the ad ID
    }
  }

  // Add click event listener to each ad element
  for (var i = 0; i < elements.length; i++) {
    elements[i].addEventListener("click", onClick);
  }
}


/***/ }),

/***/ "./assets/scripts/ajax-request.js":
/*!****************************************!*\
  !*** ./assets/scripts/ajax-request.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ajaxRequest)
/* harmony export */ });
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
/**
 * Sends ajax requests.
 * Used for post loading and inserting ads.
 * Variable site_info is defined with localize_scripts in function.php
 * @param {string} action ajax action that is registered on the server
 * @param {object} dataToSend data to send to ajax function on the server
 * @param {function} requestCallback callback function performed on request load
 * @param {array} callbackParam parameters to be passed to callback function
 */

function ajaxRequest(action, dataToSend) {
  var requestCallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var callbackParam = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var request = new XMLHttpRequest();
  request.open('POST', site_info.ajax_url, true);
  request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
  var _data = dataToSend;
  _data.action = action;
  //nonce adedd via localize script
  _data.nonce = site_info.nonce;
  //console.log(_data)
  request.onload = function () {
    if (requestCallback) {
      if (callbackParam.length > 0) {
        requestCallback.apply(void 0, [request.responseText].concat(_toConsumableArray(callbackParam)));
      } else {
        requestCallback(request.responseText);
      }
    }
  };
  //console.log(new URLSearchParams(_data));
  request.send(new URLSearchParams(_data).toString());
}

/***/ }),

/***/ "./assets/scripts/donation-form.js":
/*!*****************************************!*\
  !*** ./assets/scripts/donation-form.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ initializeForm)
/* harmony export */ });
function initializeForm(form_wrapper) {
  //click to expand form
  form_wrapper.querySelector('#darujme-form-expand-btn').addEventListener("click", function () {
    form_wrapper.querySelector('#darujme-expanded-form').style.display = "";
    setTimeout(function () {
      form_wrapper.classList.remove("collapsed");
    }, 20); //wait a bit so the transition works;
  });
  //radio inputs of fixed values
  var fv = 'input[type=radio][name=fixed_value]';
  var valueHiddenInput = form_wrapper.querySelector('#darujme_value');
  var kindHiddenInput = form_wrapper.querySelector('#darujme_kind');
  var paymentMethodIdHiddenInput = form_wrapper.querySelector('#darujme_payment_method_id');
  var paymentMethodIdTemp = form_wrapper.querySelectorAll("input[type=radio][name=payment_method_id_temp], input[type=radio][name=payment_method_ib_id_temp]");
  var paymentBankingTempRow = form_wrapper.querySelector('#onetime_payment_methods_ib');
  var companyCheckbox = form_wrapper.querySelector('#is_company');
  var periodicityRadios = form_wrapper.querySelectorAll('#periodicity input[type=radio]');
  var form = form_wrapper.querySelector('#darujme-form');
  form_wrapper.querySelector("#periodical").checked = true;
  //on change preselect second value in of fixed values
  var fv_second_child = document.querySelectorAll('#periodical_fixed_values ' + fv)[1];
  fv_second_child.checked = true;

  // Set initial value of the input
  valueHiddenInput.value = document.querySelector(fv + ':checked') ? document.querySelector(fv + ':checked').value : '';

  // Hide elements initially
  form_wrapper.querySelector('#onetime_fixed_values').style.display = 'none';
  form_wrapper.querySelector('#onetime_payment_methods').style.display = 'none';
  form_wrapper.querySelector("#onetime_payment_methods_ib").style.display = 'none';
  form_wrapper.querySelector('#custom_value_row').style.display = 'none';
  paymentMethodIdTemp.forEach(function (element) {
    if (element.checked) {
      element.checked = false;
    }
  });

  // Initially hide business-related elements
  var businessElements = form_wrapper.querySelectorAll('#row-business_name, #row-business_address, #row-business_id, #row-business_tax_id, #row-business_vat_id, #row-business_request_confirmation');
  businessElements.forEach(function (element) {
    if (!companyCheckbox.checked) {
      element.style.display = 'none';
    }
  });

  // Add event listener for changes in radio buttons inside #periodicity container
  periodicityRadios.forEach(function (radio) {
    radio.addEventListener('change', function () {
      if (document.getElementById('custom_value').value === '') {
        if (document.getElementById('periodical_fixed_values').style.display === 'none') {
          fv_second_child = document.querySelectorAll('#periodical_fixed_values ' + fv)[1];
          fv_second_child.checked = true;
          valueHiddenInput.value = fv_second_child.value;
          form_wrapper.querySelector('#custom_value_row').style.display = 'none';
          form_wrapper.querySelector('#custom_value').removeAttribute("required");
        } else {
          fv_second_child = document.querySelectorAll('#onetime_fixed_values ' + fv)[1];
          fv_second_child.checked = true;
          valueHiddenInput.value = fv_second_child.value;
          form_wrapper.querySelector('#custom_value_row').style.display = 'none';
          form_wrapper.querySelector('#custom_value').removeAttribute("required");
        }
      }
      // Toggle the visibility of certain elements
      var onetime_elements = ['#onetime_fixed_values', '#onetime_payment_methods'];
      var periodical_elements = ['#periodical_fixed_values', '#periodical_payment_methods'];
      if (this.value === "onetime") {
        periodical_elements.forEach(function (selector) {
          var element = form_wrapper.querySelector(selector);
          element.style.display = 'none';
        });
        onetime_elements.forEach(function (selector) {
          var element = form_wrapper.querySelector(selector);
          element.style.display = '';
          element.querySelectorAll("input[type=radio][name=payment_method_id_temp]").forEach(function (element) {
            element.checked = false;
          });
        });
      } else {
        periodical_elements.forEach(function (selector) {
          var element = form_wrapper.querySelector(selector);
          element.style.display = '';
        });
        onetime_elements.forEach(function (selector) {
          var element = form_wrapper.querySelector(selector);
          element.style.display = 'none';
          element.querySelectorAll("input[type=radio][name=payment_method_id_temp]").forEach(function (element) {
            element.checked = false;
          });
        });
        paymentBankingTempRow.style.display = 'none';
        if (paymentBankingTempRow.querySelector('input[type=radio]:checked')) {
          paymentBankingTempRow.querySelector('input[type=radio]:checked').checked = false;
        }
        paymentBankingTempRow.querySelectorAll('input[type=radio]').forEach(function (element) {
          element.removeAttribute("required");
        });
      }
    });
  });

  // Add event listener for changes in fixed_value radio buttons
  var fixedValueRadios = document.querySelectorAll(fv);
  fixedValueRadios.forEach(function (radio) {
    radio.addEventListener('change', function () {
      if (this.value !== "custom") {
        valueHiddenInput.value = this.value;
        form_wrapper.querySelector('#custom_value').value = '';
        form_wrapper.querySelector('#custom_value_row').style.display = 'none';
        form_wrapper.querySelector('#custom_value').removeAttribute("required");
      } else {
        form_wrapper.querySelector('#custom_value_row').style.display = '';
        form_wrapper.querySelector('#custom_value').setAttribute("required", "required");
      }
    });
  });

  // Add event listener for changes in custom_value input
  form_wrapper.querySelector('#custom_value').addEventListener('change', function () {
    var checkedRadio = document.querySelector(fv + ':checked');
    if (checkedRadio) {
      checkedRadio.checked = false;
    }
    valueHiddenInput.value = this.value;
  });

  //Add event listener for payment method
  paymentMethodIdTemp.forEach(function (payment_method) {
    payment_method.addEventListener('change', function () {
      if (payment_method.value !== "payment_ib") {
        if (payment_method.name !== "payment_method_ib_id_temp") {
          paymentBankingTempRow.style.display = 'none';
          if (paymentBankingTempRow.querySelector('input[type=radio]:checked')) {
            paymentBankingTempRow.querySelector('input[type=radio]:checked').checked = false;
          }
          paymentBankingTempRow.querySelectorAll('input[type=radio]').forEach(function (element) {
            element.removeAttribute("required");
          });
        }
        paymentMethodIdHiddenInput.value = payment_method.value;
      } else {
        paymentMethodIdHiddenInput.value = '';
        paymentBankingTempRow.style.display = '';
        paymentBankingTempRow.querySelectorAll('input[type=radio]').forEach(function (element) {
          element.setAttribute("required", "required");
        });
      }
    });
  });

  // Add event listener for form submission
  form.addEventListener('submit', function (event) {
    var elementsToRemove = form_wrapper.querySelectorAll(fv + ', #custom_value, #is_company, input[type=radio][name=payment_method_id_temp], input[type=radio][name=payment_method_ib_id_temp]');
    elementsToRemove.forEach(function (el) {
      el.remove();
    });
  });

  // Add event listener for the company checkbox
  companyCheckbox.addEventListener('click', function () {
    var elementsToToggle = ['#row-business_name', '#row-business_address', '#row-business_id', '#row-business_tax_id', '#row-business_vat_id', '#row-business_request_confirmation'];
    elementsToToggle.forEach(function (selector) {
      var element = form_wrapper.querySelector(selector);
      element.style.display = companyCheckbox.checked === true ? 'block' : 'none';
    });
    kindHiddenInput.value = kindHiddenInput.value === 'person' ? 'company' : 'person';
  });
}

/***/ }),

/***/ "./assets/scripts/header.js":
/*!**********************************!*\
  !*** ./assets/scripts/header.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ headerFunctions)
/* harmony export */ });
/* harmony import */ var _load_header_series__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load-header-series */ "./assets/scripts/load-header-series.js");
/* harmony import */ var bootstrap_js_dist_collapse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bootstrap/js/dist/collapse */ "./node_modules/bootstrap/js/dist/collapse.js");
/* harmony import */ var bootstrap_js_dist_collapse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_dist_collapse__WEBPACK_IMPORTED_MODULE_1__);


function headerFunctions() {
  (0,_load_header_series__WEBPACK_IMPORTED_MODULE_0__["default"])();
  var topHeader = document.getElementById('top-header');
  var topHeaderLogo = topHeader.querySelector('svg');
  var horizontalNavLogo = document.getElementById('horizontal-nav-logo');
  var topHeaderLogoBottom;
  var topHeaderCollapsed;
  var horizontalNavLogoShown;
  var topHeaderCollapse;
  var isTouchDevice = false;
  var isCollapseInitialized = false;

  /** top header is shown onload only on front page
   * horizontal nav logo is shown only when top header is not visible
   * initally they share the state (showHorizontalNavLogo = topHeaderCollapsed)
   * this should happen only after large breakpoint - 900px
  */
  topHeaderCollapsed = !topHeader.classList.contains('show');
  horizontalNavLogoShown = topHeaderCollapsed;
  var initializeCollapsed = function initializeCollapsed() {
    if (topHeaderCollapsed) {
      topHeaderCollapse = new (bootstrap_js_dist_collapse__WEBPACK_IMPORTED_MODULE_1___default())(topHeader, {
        toggle: false
      });
      isCollapseInitialized = true;
    }
  };

  //if has opacity-0 class, that means it is hidden

  var hideHorizontalNavLogo = function hideHorizontalNavLogo() {
    horizontalNavLogo.classList.add('opacity-0');
    horizontalNavLogoShown = false;
    setTimeout(function () {
      horizontalNavLogoShown = false;
      horizontalNavLogo.classList.add('invisible');
    }, 100);
  };
  var showHorizontalNavLogo = function showHorizontalNavLogo() {
    horizontalNavLogo.classList.remove('opacity-0', 'invisible');
    horizontalNavLogoShown = true;
    //simple fix for situation when user scrolls up and down fast enough, that it adds class later than the remove attempt
    setTimeout(function () {
      horizontalNavLogoShown = true;
      horizontalNavLogo.classList.remove('invisible');
    }, 100);
  };
  var showTopHeaderOnScroll = function showTopHeaderOnScroll() {
    if (topHeaderCollapsed) {
      if (document.documentElement.scrollTop == 0) {
        topHeaderCollapse.show();
        topHeaderCollapsed = false;
        //remove event listener for wheel after the top header is shown
        window.removeEventListener("wheel", showTopHeaderOnMousewheelUp);
        hideHorizontalNavLogo();
      }
    } else {
      toggleHorizontalNavLogo();
    }
  };
  var toggleHorizontalNavLogo = function toggleHorizontalNavLogo() {
    topHeaderLogoBottom = topHeaderLogo.getBoundingClientRect().bottom;
    if (topHeaderLogoBottom > 0 && horizontalNavLogoShown) {
      hideHorizontalNavLogo();
    }
    if (topHeaderLogoBottom <= 0 && !horizontalNavLogoShown) {
      showHorizontalNavLogo();
    }
  };
  if (window.screen.width >= 900) {
    initializeCollapsed();
    window.addEventListener("scroll", showTopHeaderOnScroll);
    window.addEventListener("wheel", showTopHeaderOnMousewheelUp);
  } else {
    if (!topHeaderCollapsed) {
      window.addEventListener("scroll", toggleHorizontalNavLogo);
    }
  }
  window.onresize = function () {
    if (window.screen.width >= 900) {
      if (!isCollapseInitialized) {
        initializeCollapsed();
        window.addEventListener("scroll", showTopHeaderOnScroll);
        window.addEventListener("wheel", showTopHeaderOnMousewheelUp);
      }
    }
  };

  //uncollapse top part of header by scrollwheel up when on top of page (onscroll is not triggered by wheelup if there is nowhere to scroll on desktop    )
  function showTopHeaderOnMousewheelUp(event) {
    if (event.deltaY < 0 && document.documentElement.scrollTop == 0 && topHeaderCollapsed) {
      if (!document.body.classList.contains('modal-open')) {
        topHeaderCollapse.show();
        topHeaderCollapsed = false;
        //remove event listener after the top header is shown
        window.removeEventListener("wheel", showTopHeaderOnMousewheelUp);
        hideHorizontalNavLogo();
      }
    }
  }
}

/***/ }),

/***/ "./assets/scripts/load-header-series.js":
/*!**********************************************!*\
  !*** ./assets/scripts/load-header-series.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ loadHeaderSeries)
/* harmony export */ });
function loadHeaderSeries() {
  var headerSeries = document.querySelectorAll('.header-series-wrapper > a');
  if (headerSeries.length > 0) {
    headerSeries[getRandomInt(0, headerSeries.length - 1)].style.display = "";
  }
}
function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

/***/ }),

/***/ "./assets/scripts/post-filter-modal.js":
/*!*********************************************!*\
  !*** ./assets/scripts/post-filter-modal.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ postFilterModal)
/* harmony export */ });
/* harmony import */ var bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bootstrap/js/dist/modal */ "./node_modules/bootstrap/js/dist/modal.js");
/* harmony import */ var bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_0__);

function postFilterModal() {
  //selects only sticky navigation, as non sticky does not need to collapse to modal
  var filterInstances = document.querySelectorAll(".filters-modal.position-sticky");
  var filterTogglerWrapperInstances = document.querySelectorAll(".btn-filter-toggle-wrapper");
  //fix top position in eshop when notices present
  var horizontalNav = document.querySelector('.horizontal-nav-wrapper');

  /** arbitrary size where filters do not cover the whole screen 
   * remove display none
  */
  var displayFiltersAsModal = false;
  if (window.screen.height > 500 && window.screen.width > 500) {
    filterInstances.forEach(function (element) {
      element.style.display = "";
    });
  } else {
    displayFiltersAsModal = true;
    filterTogglerWrapperInstances.forEach(function (element) {
      element.style.display = "";
    });
    filterInstances.forEach(function (filters) {
      filters.classList.add('modal', 'fade', 'modal-fullscreen', 'bg-primary', 'py-3');
      filters.classList.remove('alignwider');
      filters.querySelector('.close').style.display = "";
    });
  }
  updateFilterTop();
  var resizeObserver = new ResizeObserver(function () {
    updateFilterTop();
  });
  if (filterInstances.length > 0) {
    resizeObserver.observe(horizontalNav);
  }
  function updateFilterTop() {
    /** add top position according to horizontal nav height to filters wrapper or toggle button
    */
    var elementsTop = displayFiltersAsModal ? filterTogglerWrapperInstances : filterInstances;
    elementsTop.forEach(function (element) {
      if (document.body.classList.contains('admin-bar')) {
        element.style.top = horizontalNav.getBoundingClientRect().height + 44 + 'px';
      } else {
        element.style.top = horizontalNav.getBoundingClientRect().height + 12 + 'px';
      }
    });
  }
  if (filterTogglerWrapperInstances.length > 0) filterTogglerWrapperInstances.forEach(function (wrapper) {
    var toggle = wrapper.querySelector('.btn-filter-toggle');
    var firstClick = true;
    var modal;
    toggle.addEventListener('click', function (event) {
      if (firstClick) {
        var options = {
          show: true
        };
        //modal is sibling of toggle 

        //console.log(wrapper.parentNode.querySelector('.filters-modal'));
        var modalElement = wrapper.parentNode.querySelector('.filters-modal');
        modalElement.classList.remove('position-sticky');
        modal = new (bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_0___default())(modalElement, options);
        firstClick = false;
      }
      //console.log(modal);
      modal.toggle();
    });
  });
  /* 
      filterInstances.forEach((element)=>{
          if (element.classList.contains('position-sticky')){
              element.querySelector('.btn-filter-toggle').addEventListener('click', toggleModal);
              element.querySelector('.btn-close').addEventListener('click', closeModal);  
   
              document.addEventListener('keydown', (event) => {
                  if (event.key === 'Escape') {
                      if (document.body.classList.contains('modal-open')) {
                          for (let i = 0; i < filterInstances.length; i++) {
                              filterInstances[i].querySelector('.filters-modal').classList.remove('open');
                              document.body.classList.remove('modal-open');
                          }
                      }
                  }
              });
          }
      }); */
  /* 
      function closeModal(event) {
          let filterModal = event.target.closest('.filters-modal');
          filterModal.classList.remove('open');
          document.body.classList.remove('modal-open');
      }
  
      function toggleModal(event) {
          let filterModal = event.target.closest(".post-filters").querySelector('.filters-modal');
          if (filterModal.classList.contains('open')) {
              filterModal.classList.remove('open');
              document.body.classList.remove('modal-open');
          } else {
              filterModal.classList.add('open');
              document.body.classList.add('modal-open');
          }
      } */
}

/***/ }),

/***/ "./assets/scripts/product-carousel.js":
/*!********************************************!*\
  !*** ./assets/scripts/product-carousel.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ productCarousel)
/* harmony export */ });
function productCarousel() {
  document.addEventListener('DOMContentLoaded', function () {
    var firstClone = true;

    // Select all carousel items inside #post-carousel
    var productCarousel = document.getElementById('product-carousel');
    var carouselItems = productCarousel.querySelectorAll('.carousel-item');
    var galleryLinks = document.querySelectorAll('.product-gallery .gallery-link');
    galleryLinks.forEach(function (link) {
      link.addEventListener("click", function (event) {
        event.preventDefault();
        if (firstClone) {
          // Select the modal content and carousel inner container
          var modalContent = document.getElementById('product-modal-content');
          var modalInner = modalContent.querySelector('.carousel-inner');

          // Clone each carousel item from the post carousel and append it to modal's carousel-inner
          galleryLinks.forEach(function (link) {
            var clonedItem = link.querySelector('img').cloneNode();
            clonedItem.classList.remove('w-100');
            clonedItem.setAttribute("sizes", "95vw");
            var imageWrapper = document.createElement('div');
            imageWrapper.classList.add('carousel-img-wrapper');
            imageWrapper.appendChild(clonedItem);
            var carouselItemWrapperDiv = document.createElement('div');
            carouselItemWrapperDiv.classList.add('carousel-item');
            carouselItemWrapperDiv.appendChild(imageWrapper);
            modalInner.appendChild(carouselItemWrapperDiv);
          });
          firstClone = false; // Prevent cloning multiple times
        }
        // Get the active index from the event target (you'll need to pass the event here)
        var activeIndex = Array.from(galleryLinks).indexOf(event.target.closest('a'));

        // Get the currently active carousel item and remove the active class
        var activeItem = productCarousel.querySelector('.carousel-item.active');
        if (activeItem !== undefined && activeItem !== null) {
          activeItem.classList.remove('active');
        }
        // Find the new active item based on the active index
        activeItem = productCarousel.querySelectorAll('.carousel-item')[activeIndex];
        activeItem.classList.add('active');
      });
    });
    carouselItems.forEach(function (item) {
      item.addEventListener('click', function () {

        // Optionally, you can handle any active item updates here.
        // e.g., you might want to show image captions or any other logic.
      });
    });
  });
}

/***/ }),

/***/ "./assets/scripts/scripts.js":
/*!***********************************!*\
  !*** ./assets/scripts/scripts.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var bootstrap_js_dist_carousel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bootstrap/js/dist/carousel */ "./node_modules/bootstrap/js/dist/carousel.js");
/* harmony import */ var bootstrap_js_dist_carousel__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_dist_carousel__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var bootstrap_js_dist_collapse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bootstrap/js/dist/collapse */ "./node_modules/bootstrap/js/dist/collapse.js");
/* harmony import */ var bootstrap_js_dist_collapse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_dist_collapse__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bootstrap/js/dist/modal */ "./node_modules/bootstrap/js/dist/modal.js");
/* harmony import */ var bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_dist_modal__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var bootstrap_js_dist_offcanvas__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bootstrap/js/dist/offcanvas */ "./node_modules/bootstrap/js/dist/offcanvas.js");
/* harmony import */ var bootstrap_js_dist_offcanvas__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bootstrap_js_dist_offcanvas__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _ad_inserter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ad-inserter */ "./assets/scripts/ad-inserter.js");
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./header */ "./assets/scripts/header.js");
/* harmony import */ var _ajax_request__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ajax-request */ "./assets/scripts/ajax-request.js");
/* harmony import */ var _post_filter_modal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./post-filter-modal */ "./assets/scripts/post-filter-modal.js");
/* harmony import */ var _show_more_posts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./show-more-posts */ "./assets/scripts/show-more-posts.js");
/* harmony import */ var _donation_form__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./donation-form */ "./assets/scripts/donation-form.js");
/* harmony import */ var _product_carousel__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./product-carousel */ "./assets/scripts/product-carousel.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
// Import just what we need

// import 'bootstrap/js/dist/alert';
// import 'bootstrap/js/dist/button';


//import 'bootstrap/js/dist/dropdown';


// import 'bootstrap/js/dist/popover';
// import 'bootstrap/js/dist/scrollspy';
// import 'bootstrap/js/dist/tab';
// import 'bootstrap/js/dist/toast';
// import 'bootstrap/js/dist/tooltip';







(0,_header__WEBPACK_IMPORTED_MODULE_5__["default"])();
document.querySelectorAll('.dismiss-notice').forEach(function (element) {
  element.addEventListener("click", function (event) {
    event.target.closest('.woocommerce-message').remove();
  });
});

//stop images with max height from resizing on mobile
document.addEventListener('DOMContentLoaded', function () {
  document.documentElement.style.setProperty('--kptl-initial-vh', window.screen.height / 100 + 'px');
});
(0,_show_more_posts__WEBPACK_IMPORTED_MODULE_8__["default"])();
if (document.body.classList.contains('single-product')) {
  (0,_product_carousel__WEBPACK_IMPORTED_MODULE_10__["default"])();
}
var donation_form_wrapper = document.getElementById("darujme-form-wrapper");
if (donation_form_wrapper) {
  (0,_donation_form__WEBPACK_IMPORTED_MODULE_9__["default"])(donation_form_wrapper);
}
//console.log(site_info);
var isSinglePostOrPodcast = (0,_ad_inserter__WEBPACK_IMPORTED_MODULE_4__.checkSinglePostOrPodcast)();
var AdInsertingEnabled = (0,_ad_inserter__WEBPACK_IMPORTED_MODULE_4__.checkAdInsertingEnabled)();
var DonationInsertingEnabled = (0,_ad_inserter__WEBPACK_IMPORTED_MODULE_4__.checkDonationInsertingEnabled)();
(0,_post_filter_modal__WEBPACK_IMPORTED_MODULE_7__["default"])();

//adInserter();
if (!document.body.classList.contains('woocommerce-active')) {
  if (isSinglePostOrPodcast) {
    if (AdInsertingEnabled || DonationInsertingEnabled) {
      (0,_ajax_request__WEBPACK_IMPORTED_MODULE_6__["default"])('adinserter', {
        onead: true,
        ad: AdInsertingEnabled,
        donation: DonationInsertingEnabled
      }, _ad_inserter__WEBPACK_IMPORTED_MODULE_4__.adInserter, [true, _ajax_request__WEBPACK_IMPORTED_MODULE_6__["default"]]);
    }
  } else {
    (0,_ajax_request__WEBPACK_IMPORTED_MODULE_6__["default"])('adinserter', {
      onead: false,
      ad: true,
      donation: false
    }, _ad_inserter__WEBPACK_IMPORTED_MODULE_4__.adInserter, [false, _ajax_request__WEBPACK_IMPORTED_MODULE_6__["default"]]);
  }
}
var postViewsElements = document.querySelectorAll('article .post-views');
var articles_id;
addEventListener("DOMContentLoaded", function () {
  if (_typeof(postViewsElements) !== undefined) {
    postViewsElements = Array.from(document.querySelectorAll('article .post-views'));
    for (var i = 0; i < postViewsElements.length; i += 8) {
      var postViewsBatch = postViewsElements.slice(i, i + 8);
      var postIdsBatch = [];
      for (var _i = 0; _i < postViewsBatch.length; _i++) {
        postIdsBatch[_i] = postViewsBatch[_i].getAttribute("data-id");
      }
      (0,_ajax_request__WEBPACK_IMPORTED_MODULE_6__["default"])('getviews', {
        ids: postIdsBatch
      }, insertPostViews, [postViewsBatch]);
    }
  }
});
function insertPostViews(response, postViewsElements) {
  response = JSON.parse(response);
  for (var i = 0; i < response.length; i++) {
    var numberElement = postViewsElements[i].querySelector('.number');
    numberElement.insertAdjacentHTML('afterbegin', response[i]);
    postViewsElements[i].classList.remove('opacity-0');
  }
}

/***/ }),

/***/ "./assets/scripts/show-more-posts.js":
/*!*******************************************!*\
  !*** ./assets/scripts/show-more-posts.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ showMorePosts)
/* harmony export */ });
function showMorePosts() {
  var MEDIA_BREAKPOINT_XL = 1400;
  var showMoreButtons = document.querySelectorAll('.show-more-posts');
  for (var i = 0; i < showMoreButtons.length; i++) {
    showMoreButtons[i].addEventListener("click", unhidePosts);
  }
  function unhidePosts(event) {
    var target = event.target.closest('button');
    event.preventDefault();
    var wrapper = target.parentNode.closest('section').querySelector('.show-more-posts-wrapper');
    //let height = wrapper.offsetHeight;
    //wrapper.style.height = height + 'px';
    wrapper.classList.remove('show-more-hide');
    //height = wrapper.scrollHeight;
    //wrapper.style.height = height + 'px';
    //reset after transition
    /* setTimeout(function(){
        wrapper.style.height = "";
    }, 0); */
    //move focus for keyboard navigation
    var moveFocusElement;
    if (window.screen.width >= 1400) {
      moveFocusElement = wrapper.querySelector(".hide-xl");
    } else {
      moveFocusElement = wrapper.querySelector(".hide-sm");
    }
    setTimeout(function () {
      moveFocusElement.focus({
        preventScroll: true
      });
      var scrollToHeight = moveFocusElement.getBoundingClientRect().top + window.scrollY - document.getElementById("horizontal-nav").offsetHeight - 20;
      window.scrollTo(0, scrollToHeight, "smooth");
    }, 10);
    var showAllText = target.getAttribute("show-all-text");
    target.removeEventListener("click", unhidePosts);
    var replacement = document.createElement('a');
    replacement.setAttribute("href", target.getAttribute("data-href"));
    replacement.setAttribute("class", target.getAttribute("class"));
    replacement.innerHTML = target.getAttribute("show-all-text") + '<svg class="icon-square ms-2"><use xlink:href="#icon-arrow-right"></use></svg>';
    target.parentNode.replaceChild(replacement, target);
  }
}

/***/ }),

/***/ "./node_modules/bootstrap/js/dist/base-component.js":
/*!**********************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/base-component.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/*!
  * Bootstrap base-component.js v5.3.3 (https://getbootstrap.com/)
  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
   true ? module.exports = factory(__webpack_require__(/*! ./dom/data.js */ "./node_modules/bootstrap/js/dist/dom/data.js"), __webpack_require__(/*! ./dom/event-handler.js */ "./node_modules/bootstrap/js/dist/dom/event-handler.js"), __webpack_require__(/*! ./util/config.js */ "./node_modules/bootstrap/js/dist/util/config.js"), __webpack_require__(/*! ./util/index.js */ "./node_modules/bootstrap/js/dist/util/index.js")) :
  0;
})(this, (function (Data, EventHandler, Config, index_js) { 'use strict';

  /**
   * --------------------------------------------------------------------------
   * Bootstrap base-component.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */


  /**
   * Constants
   */

  const VERSION = '5.3.3';

  /**
   * Class definition
   */

  class BaseComponent extends Config {
    constructor(element, config) {
      super();
      element = index_js.getElement(element);
      if (!element) {
        return;
      }
      this._element = element;
      this._config = this._getConfig(config);
      Data.set(this._element, this.constructor.DATA_KEY, this);
    }

    // Public
    dispose() {
      Data.remove(this._element, this.constructor.DATA_KEY);
      EventHandler.off(this._element, this.constructor.EVENT_KEY);
      for (const propertyName of Object.getOwnPropertyNames(this)) {
        this[propertyName] = null;
      }
    }
    _queueCallback(callback, element, isAnimated = true) {
      index_js.executeAfterTransition(callback, element, isAnimated);
    }
    _getConfig(config) {
      config = this._mergeConfigObj(config, this._element);
      config = this._configAfterMerge(config);
      this._typeCheckConfig(config);
      return config;
    }

    // Static
    static getInstance(element) {
      return Data.get(index_js.getElement(element), this.DATA_KEY);
    }
    static getOrCreateInstance(element, config = {}) {
      return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null);
    }
    static get VERSION() {
      return VERSION;
    }
    static get DATA_KEY() {
      return `bs.${this.NAME}`;
    }
    static get EVENT_KEY() {
      return `.${this.DATA_KEY}`;
    }
    static eventName(name) {
      return `${name}${this.EVENT_KEY}`;
    }
  }

  return BaseComponent;

}));
//# sourceMappingURL=base-component.js.map


/***/ }),

/***/ "./node_modules/bootstrap/js/dist/carousel.js":
/*!****************************************************!*\
  !*** ./node_modules/bootstrap/js/dist/carousel.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/*!
  * Bootstrap carousel.js v5.3.3 (https://getbootstrap.com/)
  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
   true ? module.exports = factory(__webpack_require__(/*! ./base-component.js */ "./node_modules/bootstrap/js/dist/base-component.js"), __webpack_require__(/*! ./dom/event-handler.js */ "./node_modules/bootstrap/js/dist/dom/event-handler.js"), __webpack_require__(/*! ./dom/manipulator.js */ "./node_modules/bootstrap/js/dist/dom/manipulator.js"), __webpack_require__(/*! ./dom/selector-engine.js */ "./node_modules/bootstrap/js/dist/dom/selector-engine.js"), __webpack_require__(/*! ./util/index.js */ "./node_modules/bootstrap/js/dist/util/index.js"), __webpack_require__(/*! ./util/swipe.js */ "./node_modules/bootstrap/js/dist/util/swipe.js")) :
  0;
})(this, (function (BaseComponent, EventHandler, Manipulator, SelectorEngine, index_js, Swipe) { 'use strict';

  /**
   * --------------------------------------------------------------------------
   * Bootstrap carousel.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */


  /**
   * Constants
   */

  const NAME = 'carousel';
  const DATA_KEY = 'bs.carousel';
  const EVENT_KEY = `.${DATA_KEY}`;
  const DATA_API_KEY = '.data-api';
  const ARROW_LEFT_KEY = 'ArrowLeft';
  const ARROW_RIGHT_KEY = 'ArrowRight';
  const TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch

  const ORDER_NEXT = 'next';
  const ORDER_PREV = 'prev';
  const DIRECTION_LEFT = 'left';
  const DIRECTION_RIGHT = 'right';
  const EVENT_SLIDE = `slide${EVENT_KEY}`;
  const EVENT_SLID = `slid${EVENT_KEY}`;
  const EVENT_KEYDOWN = `keydown${EVENT_KEY}`;
  const EVENT_MOUSEENTER = `mouseenter${EVENT_KEY}`;
  const EVENT_MOUSELEAVE = `mouseleave${EVENT_KEY}`;
  const EVENT_DRAG_START = `dragstart${EVENT_KEY}`;
  const EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`;
  const EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;
  const CLASS_NAME_CAROUSEL = 'carousel';
  const CLASS_NAME_ACTIVE = 'active';
  const CLASS_NAME_SLIDE = 'slide';
  const CLASS_NAME_END = 'carousel-item-end';
  const CLASS_NAME_START = 'carousel-item-start';
  const CLASS_NAME_NEXT = 'carousel-item-next';
  const CLASS_NAME_PREV = 'carousel-item-prev';
  const SELECTOR_ACTIVE = '.active';
  const SELECTOR_ITEM = '.carousel-item';
  const SELECTOR_ACTIVE_ITEM = SELECTOR_ACTIVE + SELECTOR_ITEM;
  const SELECTOR_ITEM_IMG = '.carousel-item img';
  const SELECTOR_INDICATORS = '.carousel-indicators';
  const SELECTOR_DATA_SLIDE = '[data-bs-slide], [data-bs-slide-to]';
  const SELECTOR_DATA_RIDE = '[data-bs-ride="carousel"]';
  const KEY_TO_DIRECTION = {
    [ARROW_LEFT_KEY]: DIRECTION_RIGHT,
    [ARROW_RIGHT_KEY]: DIRECTION_LEFT
  };
  const Default = {
    interval: 5000,
    keyboar